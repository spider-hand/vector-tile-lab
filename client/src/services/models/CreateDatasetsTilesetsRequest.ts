/* tslint:disable */
/* eslint-disable */
/**
 * Vector Tile Lab API
 * API for Vector Tile Lab
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateDatasetsTilesetsRequest
 */
export interface CreateDatasetsTilesetsRequest {
    /**
     * Name for the new tileset
     * @type {string}
     * @memberof CreateDatasetsTilesetsRequest
     */
    name: string;
    /**
     * Maximum zoom level (0-22 or 'g' for guess)
     * @type {string}
     * @memberof CreateDatasetsTilesetsRequest
     */
    maximumZoom?: string;
    /**
     * Whether to drop densest as needed
     * @type {boolean}
     * @memberof CreateDatasetsTilesetsRequest
     */
    dropDensestAsNeeded?: boolean;
    /**
     * Whether to coalesce densest as needed
     * @type {boolean}
     * @memberof CreateDatasetsTilesetsRequest
     */
    coalesceDensestAsNeeded?: boolean;
    /**
     * Whether to extend zooms if still dropping
     * @type {boolean}
     * @memberof CreateDatasetsTilesetsRequest
     */
    extendZoomsIfStillDropping?: boolean;
}

/**
 * Check if a given object implements the CreateDatasetsTilesetsRequest interface.
 */
export function instanceOfCreateDatasetsTilesetsRequest(value: object): value is CreateDatasetsTilesetsRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function CreateDatasetsTilesetsRequestFromJSON(json: any): CreateDatasetsTilesetsRequest {
    return CreateDatasetsTilesetsRequestFromJSONTyped(json, false);
}

export function CreateDatasetsTilesetsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDatasetsTilesetsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'maximumZoom': json['maximum_zoom'] == null ? undefined : json['maximum_zoom'],
        'dropDensestAsNeeded': json['drop_densest_as_needed'] == null ? undefined : json['drop_densest_as_needed'],
        'coalesceDensestAsNeeded': json['coalesce_densest_as_needed'] == null ? undefined : json['coalesce_densest_as_needed'],
        'extendZoomsIfStillDropping': json['extend_zooms_if_still_dropping'] == null ? undefined : json['extend_zooms_if_still_dropping'],
    };
}

export function CreateDatasetsTilesetsRequestToJSON(json: any): CreateDatasetsTilesetsRequest {
    return CreateDatasetsTilesetsRequestToJSONTyped(json, false);
}

export function CreateDatasetsTilesetsRequestToJSONTyped(value?: CreateDatasetsTilesetsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'maximum_zoom': value['maximumZoom'],
        'drop_densest_as_needed': value['dropDensestAsNeeded'],
        'coalesce_densest_as_needed': value['coalesceDensestAsNeeded'],
        'extend_zooms_if_still_dropping': value['extendZoomsIfStillDropping'],
    };
}

