/* tslint:disable */
/* eslint-disable */
/**
 * Vector Tile Lab API
 * API for Vector Tile Lab
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StatusEnum } from './StatusEnum';
import {
    StatusEnumFromJSON,
    StatusEnumFromJSONTyped,
    StatusEnumToJSON,
} from './StatusEnum';

/**
 * 
 * @export
 * @interface Tileset
 */
export interface Tileset {
    /**
     * 
     * @type {number}
     * @memberof Tileset
     */
    readonly id: number;
    /**
     * 
     * @type {number}
     * @memberof Tileset
     */
    readonly dataset: number;
    /**
     * 
     * @type {string}
     * @memberof Tileset
     */
    readonly datasetName: string;
    /**
     * 
     * @type {string}
     * @memberof Tileset
     */
    readonly name: string;
    /**
     * 
     * @type {string}
     * @memberof Tileset
     */
    readonly pmtilesFile: string;
    /**
     * 
     * @type {StatusEnum}
     * @memberof Tileset
     */
    readonly status: StatusEnum;
    /**
     * 
     * @type {any}
     * @memberof Tileset
     */
    readonly metadata: any | null;
    /**
     * 
     * @type {Date}
     * @memberof Tileset
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Tileset
     */
    readonly updatedAt: Date;
}



/**
 * Check if a given object implements the Tileset interface.
 */
export function instanceOfTileset(value: object): value is Tileset {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('dataset' in value) || value['dataset'] === undefined) return false;
    if (!('datasetName' in value) || value['datasetName'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('pmtilesFile' in value) || value['pmtilesFile'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('metadata' in value) || value['metadata'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function TilesetFromJSON(json: any): Tileset {
    return TilesetFromJSONTyped(json, false);
}

export function TilesetFromJSONTyped(json: any, ignoreDiscriminator: boolean): Tileset {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'dataset': json['dataset'],
        'datasetName': json['dataset_name'],
        'name': json['name'],
        'pmtilesFile': json['pmtiles_file'],
        'status': StatusEnumFromJSON(json['status']),
        'metadata': json['metadata'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function TilesetToJSON(value?: Omit<Tileset, 'id'|'dataset'|'dataset_name'|'name'|'pmtiles_file'|'status'|'metadata'|'created_at'|'updated_at'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
    };
}

