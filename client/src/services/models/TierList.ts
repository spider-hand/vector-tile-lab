/* tslint:disable */
/* eslint-disable */
/**
 * Vector Tile Lab API
 * API for Vector Tile Lab
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MethodEnum } from './MethodEnum';
import {
    MethodEnumFromJSON,
    MethodEnumFromJSONTyped,
    MethodEnumToJSON,
    MethodEnumToJSONTyped,
} from './MethodEnum';

/**
 * 
 * @export
 * @interface TierList
 */
export interface TierList {
    /**
     * 
     * @type {number}
     * @memberof TierList
     */
    readonly id: number;
    /**
     * 
     * @type {number}
     * @memberof TierList
     */
    readonly dataset: number;
    /**
     * 
     * @type {string}
     * @memberof TierList
     */
    readonly field: string;
    /**
     * 
     * @type {MethodEnum}
     * @memberof TierList
     */
    readonly method: MethodEnum;
    /**
     * 
     * @type {any}
     * @memberof TierList
     */
    readonly breaks: any | null;
}



/**
 * Check if a given object implements the TierList interface.
 */
export function instanceOfTierList(value: object): value is TierList {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('dataset' in value) || value['dataset'] === undefined) return false;
    if (!('field' in value) || value['field'] === undefined) return false;
    if (!('method' in value) || value['method'] === undefined) return false;
    if (!('breaks' in value) || value['breaks'] === undefined) return false;
    return true;
}

export function TierListFromJSON(json: any): TierList {
    return TierListFromJSONTyped(json, false);
}

export function TierListFromJSONTyped(json: any, ignoreDiscriminator: boolean): TierList {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'dataset': json['dataset'],
        'field': json['field'],
        'method': MethodEnumFromJSON(json['method']),
        'breaks': json['breaks'],
    };
}

export function TierListToJSON(json: any): TierList {
    return TierListToJSONTyped(json, false);
}

export function TierListToJSONTyped(value?: Omit<TierList, 'id'|'dataset'|'field'|'method'|'breaks'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
    };
}

