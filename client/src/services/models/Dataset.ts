/* tslint:disable */
/* eslint-disable */
/**
 * Vector Tile Lab API
 * API for Vector Tile Lab
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Dataset
 */
export interface Dataset {
    /**
     * 
     * @type {number}
     * @memberof Dataset
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof Dataset
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Dataset
     */
    geojsonFile?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Dataset
     */
    shpFile?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Dataset
     */
    shxFile?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Dataset
     */
    dbfFile?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Dataset
     */
    prjFile?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Dataset
     */
    cpgFile?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Dataset
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Dataset
     */
    readonly updatedAt: Date;
}

/**
 * Check if a given object implements the Dataset interface.
 */
export function instanceOfDataset(value: object): value is Dataset {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function DatasetFromJSON(json: any): Dataset {
    return DatasetFromJSONTyped(json, false);
}

export function DatasetFromJSONTyped(json: any, ignoreDiscriminator: boolean): Dataset {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'geojsonFile': json['geojson_file'] == null ? undefined : json['geojson_file'],
        'shpFile': json['shp_file'] == null ? undefined : json['shp_file'],
        'shxFile': json['shx_file'] == null ? undefined : json['shx_file'],
        'dbfFile': json['dbf_file'] == null ? undefined : json['dbf_file'],
        'prjFile': json['prj_file'] == null ? undefined : json['prj_file'],
        'cpgFile': json['cpg_file'] == null ? undefined : json['cpg_file'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function DatasetToJSON(json: any): Dataset {
    return DatasetToJSONTyped(json, false);
}

export function DatasetToJSONTyped(value?: Omit<Dataset, 'id'|'created_at'|'updated_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'geojson_file': value['geojsonFile'],
        'shp_file': value['shpFile'],
        'shx_file': value['shxFile'],
        'dbf_file': value['dbfFile'],
        'prj_file': value['prjFile'],
        'cpg_file': value['cpgFile'],
    };
}

